{"version":3,"sources":["pages/Home.js","components/ProjectCard/index.js","components/Wrapper/index.js","pages/Projects.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","href","ProjectCard","props","name","info","github","deployed","Wrapper","children","Projects","state","apps","this","map","app","id","key","img","Component","App","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"82DA2BeA,G,MAxBF,WACZ,OACC,yBAAKC,UAAU,kBACd,yBAAKA,UAAU,OACd,iDAED,yBAAKA,UAAU,OACd,gGAED,yBAAKA,UAAU,OACd,2DAEC,uBAAGC,KAAK,gCAAR,SAFD,sBAIC,uBAAGA,KAAK,2DAAR,SAEK,IANN,6D,8CCoBWC,MA9Bf,SAAqBC,GACpB,OACC,yBAAKH,UAAU,aACd,yBAAKA,UAAU,OACd,yBAAKA,UAAU,OACd,yBAAKA,UAAU,QACd,yBAAKA,UAAU,sBAGf,yBAAKA,UAAU,WACd,6BACC,4BAAKG,EAAMC,MACX,4BACC,+CADD,IAC8BD,EAAME,MAEpC,wBAAIL,UAAU,cAAd,eACa,uBAAGC,KAAK,kBAAR,IAA2BE,EAAMG,SAE9C,wBAAIN,UAAU,cAAd,gBACc,uBAAGC,KAAK,oBAAR,IAA6BE,EAAMI,kB,MCf1CC,MAJf,SAAiBL,GAChB,OAAO,yBAAKH,UAAU,WAAWG,EAAMM,WCyBzBC,E,4MAvBdC,MAAQ,CACPC,Q,uDAGA,OACC,kBAAC,EAAD,KACC,oDACCC,KAAKF,MAAMC,KAAKE,KAAI,SAACC,GAAD,OACpB,kBAAC,EAAD,CACCC,GAAID,EAAIC,GACRC,IAAKF,EAAIC,GACTZ,KAAMW,EAAIX,KACVc,IAAKH,EAAIG,IACTb,KAAMU,EAAIV,KACVC,OAAQS,EAAIT,OACZC,SAAUQ,EAAIR,mB,GAhBGY,aC6CRC,MA5Cf,WACC,OACC,kBAAC,IAAD,KACC,yBAAKpB,UAAU,iDACd,uBAAGA,UAAU,eAAeC,KAAK,KAAjC,UAGA,4BACCD,UAAU,iBACVqB,KAAK,SACLC,cAAY,WACZC,cAAY,aACZC,gBAAc,YACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAM1B,UAAU,yBAEjB,yBAAKA,UAAU,2BAA2BgB,GAAG,aAC5C,wBAAIhB,UAAU,cACb,wBAAIA,UAAU,mBACb,4BACC,kBAAC,IAAD,CAAM2B,GAAG,IAAI3B,UAAU,YAAvB,UAKF,wBAAIA,UAAU,YACb,4BACC,kBAAC,IAAD,CAAM2B,GAAG,YAAY3B,UAAU,YAA/B,iBASL,kBAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,IAAIC,UAAW/B,IACjC,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,YAAYC,UAAWpB,MCjCxBqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.bf8fd9a2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n\treturn (\r\n\t\t<div className='container home'>\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<h1>Patrick Bridwell</h1>\r\n\t\t\t</div>\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<h4>I am a freelancer and student of the Vanderbilt Coding Bootcamp</h4>\r\n\t\t\t</div>\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<h5>\r\n\t\t\t\t\tYou can visit my Github page\r\n\t\t\t\t\t<a href='https://github.com/PBridwell'>here,</a>\r\n\t\t\t\t\tmy LinkedIn profile\r\n\t\t\t\t\t<a href='https://www.linkedin.com/in/patrick-bridwell-0a7451133/'>\r\n\t\t\t\t\t\there,\r\n\t\t\t\t\t</a>{' '}\r\n\t\t\t\t\tand click on the projects tab to see some of my code.\r\n\t\t\t\t</h5>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction ProjectCard(props) {\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<div className='col'>\r\n\t\t\t\t\t<div className='card'>\r\n\t\t\t\t\t\t<div className='img-container img'>\r\n\t\t\t\t\t\t\t{/* <img src={require(`${props.img}`)} alt={props.name} /> */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='content'>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h3>{props.name}</h3>\r\n\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t<small>Description:</small> {props.info}\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t<h6 className='text-muted'>\r\n\t\t\t\t\t\t\t\t\tGitHub Repo:<a href='{props.github}'> {props.github}</a>\r\n\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t<h6 className='text-muted'>\r\n\t\t\t\t\t\t\t\t\tDeployed app:<a href='{props.deployed}'> {props.deployed}</a>\r\n\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ProjectCard;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Wrapper(props) {\r\n\treturn <div className='wrapper'>{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React, { Component } from 'react';\r\nimport apps from '../projects.json';\r\nimport ProjectCard from '../components/ProjectCard';\r\nimport Wrapper from '../components/Wrapper';\r\n\r\nclass Projects extends Component {\r\n\tstate = {\r\n\t\tapps,\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Wrapper>\r\n\t\t\t\t<h1>A few of my Projects</h1>\r\n\t\t\t\t{this.state.apps.map((app) => (\r\n\t\t\t\t\t<ProjectCard\r\n\t\t\t\t\t\tid={app.id}\r\n\t\t\t\t\t\tkey={app.id}\r\n\t\t\t\t\t\tname={app.name}\r\n\t\t\t\t\t\timg={app.img}\r\n\t\t\t\t\t\tinfo={app.info}\r\n\t\t\t\t\t\tgithub={app.github}\r\n\t\t\t\t\t\tdeployed={app.deployed}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</Wrapper>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Projects;\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Projects from './pages/Projects';\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<nav className='navbar navbar-expand-lg navbar-light bg-light'>\n\t\t\t\t<a className='navbar-brand' href='#'>\n\t\t\t\t\tNavbar\n\t\t\t\t</a>\n\t\t\t\t<button\n\t\t\t\t\tclassName='navbar-toggler'\n\t\t\t\t\ttype='button'\n\t\t\t\t\tdata-toggle='collapse'\n\t\t\t\t\tdata-target='#navbarNav'\n\t\t\t\t\taria-controls='navbarNav'\n\t\t\t\t\taria-expanded='false'\n\t\t\t\t\taria-label='Toggle navigation'\n\t\t\t\t>\n\t\t\t\t\t<span className='navbar-toggler-icon'></span>\n\t\t\t\t</button>\n\t\t\t\t<div className='collapse navbar-collapse' id='navbarNav'>\n\t\t\t\t\t<ul className='navbar-nav'>\n\t\t\t\t\t\t<li className='nav-item active'>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Link to='/' className='nav-link'>\n\t\t\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li className='nav-item'>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Link to='/projects' className='nav-link'>\n\t\t\t\t\t\t\t\t\tProjects\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</nav>\n\n\t\t\t<Route exact path='/' component={Home} />\n\t\t\t<Route exact path='/projects' component={Projects} />\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}